static int Player_actor_request_main_stop_net(GAME* game, int priority) {
    if (Player_actor_check_request_main_able(game, mPlayer_INDEX_STOP_NET, priority)) {
        Player_actor_request_main_index(game, mPlayer_INDEX_STOP_NET, priority);

        return TRUE;
    }

    return FALSE;
}

static void Player_actor_setup_main_Stop_net(ACTOR* actor, GAME* game) {
    PLAYER_ACTOR* player = (PLAYER_ACTOR*)actor;
    mPlayer_main_stop_net_c* main_stop = &player->main_data.stop_net;

    Player_actor_SetupItem_Base2(actor, Player_actor_Get_ItemKind_from_submenu(), mPlayer_ANIM_GET_CHANGE1,
                                 mPlayer_INDEX_RETURN_DEMO, -5.0f, -1.0f, 0);
    main_stop->_00 = 0;
    player->keyframe0.frame_control.speed = 0.0f;
    player->keyframe1.frame_control.speed = 0.0f;

    Player_actor_setup_main_Base(actor, game);
}

static void Player_actor_Movement_Stop_net(ACTOR* actor) {
    Player_actor_Movement_Base_Braking_common(actor, 0.32625001f);
}

static int Player_actor_CulcAnimation_Stop_net(ACTOR* actor) {
    f32 frame_calc;

    return Player_actor_CulcAnimation_Base2(actor, &frame_calc);
}

static void Player_actor_ObjCheck_Stop_net(ACTOR* actor, GAME* game) {
    Player_actor_Excute_Corect_forStand(actor, game);
}

static void Player_actor_BGcheck_Stop_net(ACTOR* actor) {
    Player_actor_BGcheck_common_type1(actor);
}

static void Player_actor_request_proc_index_fromStop_net(GAME* game, int ready) {
    if (ready != FALSE) {
        Player_actor_request_main_wait_all(game, -5.0f, 0.0f, 0, mPlayer_REQUEST_PRIORITY_34);
    }
}

static void Player_actor_main_Stop_net(ACTOR* actor, GAME* game) {
    int ready;

    Player_actor_Movement_Stop_net(actor);
    Player_actor_Reinput_force_position_angle(actor, game);
    Player_actor_CulcAnimation_Stop_net(actor);
    Player_actor_recover_lean_angle(actor);
    Player_actor_set_eye_pattern_normal(actor);
    Player_actor_ObjCheck_Stop_net(actor, game);
    Player_actor_BGcheck_Stop_net(actor);
    ready = Player_actor_Item_main(actor, game);
    Player_actor_request_proc_index_fromStop_net(game, ready);
}
