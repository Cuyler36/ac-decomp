static int Player_actor_request_main_demo_get_golden_axe_wait_all(GAME* game, int prio) {
    if (Player_actor_check_request_main_able(game, mPlayer_INDEX_DEMO_GET_GOLDEN_AXE_WAIT, prio)) {
        Player_actor_request_main_index(game, mPlayer_INDEX_DEMO_GET_GOLDEN_AXE_WAIT, prio);
        return TRUE;
    }

    return FALSE;
}

static void Player_actor_setup_main_Demo_get_golden_axe_wait(ACTOR* actorx, GAME* game) {
    PLAYER_ACTOR* player = (PLAYER_ACTOR*)actorx;
    mPlayer_main_demo_get_golden_axe_wait_c* demo_get_golden_axe_wait_p;
    int anim1_idx;
    int part_table_idx;

    demo_get_golden_axe_wait_p = &player->main_data.demo_get_golden_axe_wait;
    demo_get_golden_axe_wait_p->timer = 0.0f;

    Player_actor_SetupItem_Base1(actorx, mPlayer_ANIM_WAIT1, -5.0f, &anim1_idx, &part_table_idx);
    Player_actor_InitAnimation_Base1(actorx, game, mPlayer_ANIM_WAIT1, anim1_idx, 1.0f, 1.0f, 0.5f, -5.0f,
                                     part_table_idx);
    Player_actor_setup_main_Base(actorx, game);
}

static int Player_actor_CulcAnimation_Demo_get_golden_axe_wait(ACTOR* actorx) {
    return Player_actor_CulcAnimation_Base(actorx);
}

static void Player_actor_ObjCheck_Demo_get_golden_axe_wait(ACTOR* actorx, GAME* game) {
    Player_actor_Excute_Corect_forStand(actorx, game);
}

static void Player_actor_BGcheck_Demo_get_golden_axe_wait(ACTOR* actorx) {
    Player_actor_BGcheck_common_type1(actorx);
}

static void Player_actor_request_proc_index_fromDemo_get_golden_axe_wait(ACTOR* actorx, GAME* game) {
    PLAYER_ACTOR* player = (PLAYER_ACTOR*)actorx;
    mPlayer_main_demo_get_golden_axe_wait_c* demo_get_golden_axe_wait_p;
    f32* timer_p;

    demo_get_golden_axe_wait_p = &player->main_data.demo_get_golden_axe_wait;
    timer_p = &demo_get_golden_axe_wait_p->timer;

    if (*timer_p < 320.0f) {
        (*timer_p) += 1.0f;
    } else {
        mPlib_request_main_demo_get_golden_item2_type1(game, mPlayer_GOLDEN_ITEM_TYPE_AXE);
    }
}

static void Player_actor_main_Demo_get_golden_axe_wait(ACTOR* actorx, GAME* game) {
    Player_actor_Reinput_force_position_angle(actorx, game);
    Player_actor_CulcAnimation_Demo_get_golden_axe_wait(actorx);
    Player_actor_recover_lean_angle(actorx);
    Player_actor_set_eye_pattern_normal(actorx);
    Player_actor_ObjCheck_Demo_get_golden_axe_wait(actorx, game);
    Player_actor_BGcheck_Demo_get_golden_axe_wait(actorx);
    Player_actor_Item_main(actorx, game);
    Player_actor_request_proc_index_fromDemo_get_golden_axe_wait(actorx, game);
}
